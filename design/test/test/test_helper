assert_status_equal () {
  expected=$1; actual=$2; lineno=$3

  if [ $actual -eq $expected ]
  then
    printf '.'
    return 0
  else
    printf 'F'
    echo "$TEST_CASE:$lineno $TEST_NAME" 1>&2
    echo "expected exit status $expected but was $actual\n" 1>&2
    
    return 1
  fi
}

assert_output_equal () {
  expected=$(cat); actual=$1; lineno=$2

  if [ "$actual" == "$expected" ]
  then
    printf '.'
    return 0
  else
    echo -e "$expected" > "$0_$2_expected.txt"
    echo -e "$actual"   > "$0_$2_actual.txt"
    
    printf 'F'
    echo "$TEST_CASE:$lineno $TEST_NAME" 1>&2
    echo "unequal output:\n$(diff "$0_$2_expected.txt" "$0_$2_actual.txt")\n" 1>&2
    
    rm "$0_$2_expected.txt" "$0_$2_actual.txt"
    return 1
  fi
}

assert_equal () {
  assert_status_equal $1 $? $3 && 
  assert_output_equal "$2" $3
}

run_tests () {
  test_file=$1
  
  eval "$(
  grep -oE "^ *${NAME:-test_\w+} +\(\)" "$test_file" | 
  tr -d " ()" | 
  sed "s/^\([A-Za-z0-9_]\{1,\}\)/TEST_NAME=\1 \1/"
  )"
}